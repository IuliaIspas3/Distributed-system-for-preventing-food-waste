@using HttpClients.ClientInterfaces
@inject IAuthService AuthService
@inject NavigationManager NavMgr
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using System.Security.Claims
<div class="top-row ps-3 navbar navbar-dark" id="navbar-logo">
    <div class="container-fluid">
        <a class="navbar-brand">Too Fresh To Waste</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" id="navbar-menu" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/ManageAccount">
                    <span class="oi oi-person" aria-hidden="true"></span> My Account
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Policy="MustBeCustomer">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/FoodOffersOverview">
                    <span class="oi oi-cart" aria-hidden="true"></span> Food Offers Overview
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/ReservationsOverview">
                    <span class="oi oi-book" aria-hidden="true"></span> Reservations Overview
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/FoodSellersOverview">
                    <span class="oi oi-people" aria-hidden="true"></span> Food Sellers Overview
                </NavLink>
            </div>
            
        </AuthorizeView>
        <AuthorizeView Policy="MustBeFoodSeller">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/ManageFoodOffers">
                    <a> </a><span class="oi oi-cart" aria-hidden="true"></span> Manage Food Offers
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/ManageReservations">
                    <span class="oi oi-book" aria-hidden="true"></span> Manage Reservations
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" @onclick="() => { NavMgr.NavigateTo(uriUser); }" >
                    <span class="oi oi-thumb-up" aria-hidden="true"></span> View My Profile
                </NavLink>
            </div>
        </AuthorizeView>
        
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" @onclick="() => { NavMgr.NavigateTo(uriLogIn); }">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Log in
                    </NavLink>
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" @onclick="() => { AuthService.LogoutAsync(); NavMgr.NavigateTo(uriLogOut);}">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
        

    </nav>
</div>

@code {
    private bool collapseNavMenu = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : "";
    
    private static string uriLogOut = "/";
    private static string uriLogIn = "/Login";
    private static string uriUser = "/";

   
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private bool _isLoggedIn;
    private IEnumerable<Claim> userClaims;
    int AccountId = 0;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        _isLoggedIn = user.Identity != null;
        if (!_isLoggedIn) return;
        userClaims = user.Claims.AsEnumerable();
        AccountId = Int32.Parse(userClaims.FirstOrDefault(c => c.Type.Equals("ID"))!.Value);
        uriUser = $"/DisplayFoodSeller/{AccountId}";
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}