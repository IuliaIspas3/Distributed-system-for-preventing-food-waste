@page "/CreateCustomer"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject ICustomerService CustomerService
<h3>Create Customer</h3>

<div class="card">
    <h3>Create User</h3>
    <div class="form-group field">
        <label>Firstname:</label>
        <input type="text" @bind="FirstName" @bind:event="oninput"/>
        <label>Lastname:</label>
        <input type="text" @bind="LastName" @bind:event="oninput"/>
        <label>Email:</label>
        <input type="text" @bind="Email" @bind:event="oninput"/>
        <label>Phone number:</label>
        <input type="text" @bind="PhoneNumber" @bind:event="oninput"/>
        <label>Password:</label>
        <input type="text" @bind="Password" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <label style="color: red">@ErrorMessage</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" class="acceptbtn">Create</button>
    </div>
</div>

@code {
    private string FirstName = "";
    private string LastName = "";
    private string Email = "";
    private string PhoneNumber = "";
    private string Password = "";
    private string ErrorMessage = "";

    private async Task Create()
    {
        ErrorMessage = "";
        try
        {
            await CustomerService.CreateAsync(new CustomerCreationDTO(FirstName, LastName, Email, PhoneNumber, Password));
            FirstName = "";
            LastName = "";
            Email = "";
            PhoneNumber = "";
            Password = "";
            ErrorMessage = "";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            ErrorMessage = e.Message;
        }
    }
}