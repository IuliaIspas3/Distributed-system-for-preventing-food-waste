@page "/DisplayFoodSeller"
@using System.Security.Claims
@using Domain.DTOs
@attribute [Authorize]
<AuthorizeView>
    <div class="card">
        <div class="form-group field">
            <label>Name:</label>
        </div>
        <div class="form-group field">
            <label>Email:</label>
        </div>
        <div class="form-group field">
            <label>Address:</label>
        </div>
        <div class="form-group field">
            <label>Phone number:</label>
        </div>
    </div>
</AuthorizeView>
@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    private bool _isLoggedIn;
    private IEnumerable<Claim> userClaims;
    private int AccountId;
    

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        _isLoggedIn = user.Identity != null;
        if (!_isLoggedIn) return;
        userClaims = user.Claims.AsEnumerable();
        AccountId = Int32.Parse(userClaims.FirstOrDefault(c => c.Type.Equals("ID"))!.Value);
        
        
       
    }

}